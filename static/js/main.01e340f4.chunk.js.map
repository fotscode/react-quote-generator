{"version":3,"sources":["components/QuoteGenerator.jsx","index.js"],"names":["quotesArray","randomizeInteger","min","max","Number","MAX_SAFE_INTEGER","Math","ceil","floor","Error","random","QuoteGenerator","props","state","quote","author","handleNewQuote","bind","req","XMLHttpRequest","onload","e","JSON","parse","target","response","quotes","setState","open","send","hue","lightness","randomColor","document","body","style","background","button","getElementById","twitter","text","backgroundColor","color","changeColor","this","id","href","className","class","onClick","React","Component","MyApp","ReactDOM","render"],"mappings":"gJAGIA,E,2EAEJ,SAASC,EAAiBC,EAAKC,GAS5B,GARU,MAAPA,IACDA,EAAc,MAAPD,EAAcE,OAAOC,iBAAmBH,EAC7CA,EAAM,IAGTA,EAAMI,KAAKC,KAAKL,KAChBC,EAAMG,KAAKE,MAAML,IAEH,EACb,MAAM,IAAIM,MAAM,wBAGjB,OAAOP,EAAMI,KAAKE,OAAOL,EAAMD,EAAM,GAAKI,KAAKI,U,IAyDpCC,E,kDApCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACZC,MAAM,CAACA,MAAM,UAAUC,OAAO,YAE7B,EAAKC,eAAe,EAAKA,eAAeC,KAApB,gBALJ,E,qDAQnB,WAAoB,IAAD,OACdC,EAAM,IAAIC,eACdD,EAAIE,OAAU,SAACC,GAEdrB,GADAA,EAAasB,KAAKC,MAAMF,EAAEG,OAAOC,WACTC,OACrB,EAAKC,UAAS,iBAAK,CAACb,MAAMd,EAAYC,EAAiB,EAAE,WAE7DiB,EAAIU,KAAK,MAAM,4IAA2I,GAC1JV,EAAIW,S,4BAGJ,YArCF,WACE,IAAIC,EAAI7B,EAAiB,EAAE,KACvB8B,EAAU9B,EAAiB,GAAG,KAC9B+B,EAAY,OAAD,OAAQF,EAAR,iBAAoBC,EAApB,MACfE,SAASC,KAAKC,MAAMC,WAAaJ,EACjC,IAAIK,EAAOJ,SAASK,eAAe,aAC/BC,EAAQN,SAASK,eAAe,eAChCE,EAAOP,SAASK,eAAe,QAC/BvB,EAAQkB,SAASK,eAAe,UACpCD,EAAOF,MAAMM,gBAAgBT,EAC7BO,EAAQJ,MAAMM,gBAAgBT,EAC9BQ,EAAKL,MAAMO,MAAMV,EACjBjB,EAAOoB,MAAMO,MAAMV,EA0BjBW,GACAC,KAAKjB,UAAS,iBAAK,CAACb,MAAMd,EAAYC,EAAiB,EAAE,Y,oBAG3D,WACE,OACE,sBAAK4C,GAAG,YAAR,UACC,mBAAGA,GAAG,OAAN,SAAcD,KAAK/B,MAAMC,MAAMA,QAC9B,0BAAS+B,GAAG,SAAZ,eAAwBD,KAAK/B,MAAMC,MAAMC,UACxC,mBAAG+B,KAAK,2BAA2BtB,OAAO,SAASuB,UAAU,MAAMF,GAAG,cAAtE,SAAoF,mBAAGG,MAAM,oBAC/F,wBAAQD,UAAU,MAAMF,GAAG,YAAYI,QAASL,KAAK5B,eAArD,8B,GA/BsBkC,IAAMC,WClC7BC,E,kDACL,WAAYxC,GAAO,uCACZA,G,0CAGP,WACC,OACC,qBAAKiC,GAAG,QAAR,SACC,cAAC,EAAD,U,GARgBK,IAAMC,WAc1BE,IAASC,OAAO,cAAC,EAAD,IAAUrB,SAASK,eAAe,sB","file":"static/js/main.01e340f4.chunk.js","sourcesContent":["import React from 'react';\nimport Async from 'react-async';\n\nvar quotesArray;\n\nfunction randomizeInteger(min, max) {\n  \tif(max == null) {\n    \tmax = (min == null ? Number.MAX_SAFE_INTEGER : min);\n      \tmin = 0;\n    }\n\n    min = Math.ceil(min);  // inclusive min\n    max = Math.floor(max); // exclusive max\n\n  \tif(min > max - 1) {\n    \tthrow new Error(\"Incorrect arguments.\");\n    }\n\n    return min + Math.floor((max - min + 1) * Math.random());\n}\n\nfunction changeColor() {\n  let hue=randomizeInteger(0,360);\n  let lightness=randomizeInteger(75,100);\n  let randomColor=`hsl(${hue},100%,${lightness}%)`\n  document.body.style.background = randomColor;\n  let button=document.getElementById(\"new-quote\");\n  let twitter=document.getElementById(\"tweet-quote\");\n  let text = document.getElementById(\"text\");\n  let author= document.getElementById(\"author\");\n  button.style.backgroundColor=randomColor;\n  twitter.style.backgroundColor=randomColor;\n  text.style.color=randomColor;\n  author.style.color=randomColor;\n  return false;\n}\n\n\nclass QuoteGenerator extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n\t\t\tquote:{quote:'Loading',author:'Loading'}\n    }\n    this.handleNewQuote=this.handleNewQuote.bind(this);\n  }\n\n\tcomponentDidMount(){\n\t\tlet req = new XMLHttpRequest;\n\t\treq.onload = ((e)=>{\n\t\t\tquotesArray= JSON.parse(e.target.response);\n\t\t\tquotesArray=quotesArray.quotes;\n   \t  this.setState(()=>({quote:quotesArray[randomizeInteger(0,101)]}));\n\t\t});\n\t\treq.open(\"get\",\"https://gist.githubusercontent.com/nasrulhazim/54b659e43b1035215cd0ba1d4577ee80/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\",true)\n\t\treq.send();\n\t}\n\n  handleNewQuote(){\n    changeColor();\n    this.setState(()=>({quote:quotesArray[randomizeInteger(0,101)]}));\n  }\n\n  render(){\n    return(\n      <div id=\"quote-box\">\n       <q id=\"text\">{this.state.quote.quote}</q>\n        <address id=\"author\">- {this.state.quote.author}</address>\n         <a href=\"twitter.com/intent/tweet\" target=\"_blank\" className=\"btn\" id=\"tweet-quote\"><i class=\"fa fa-twitter\"></i></a>\n       <button className=\"btn\" id=\"new-quote\" onClick={this.handleNewQuote}>New quote</button>\n      </div>\n    );\n  }\n}\n\nexport default QuoteGenerator;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport QuoteGenerator from './components/QuoteGenerator';\r\n\r\nclass MyApp extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div id=\"myApp\">\r\n\t\t\t\t<QuoteGenerator />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(<MyApp />,document.getElementById(\"quote-container\"));\r\n"],"sourceRoot":""}